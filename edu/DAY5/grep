#!/bin/bash

# grep_test

# grep : 정규 표현식을 사용한 검색을 위한 유틸리티

# 0. 파일 준비
#ls /bin > grep1.txt
#ls /usr/bin > grep2.txt

# 1. 기본 모양
#grep 'zip a' grep1.txt 		# 공백이 있다면 '' 혹은 "" 로 검색 문자열을 묶자
#grep 'zip' grep*				# 다중 파일에서 검색

# 2. 다양한 옵션 (244p)
#grep -l 'zip' grep* 			# 'zip'이 내용에 포함 되어 있는 파일 이름만 출력


# 3. 정규 표현식
# 메타 문자와 리터널
# 메타 문자 : ^ $ . [ ] { } - ? * + ( ) | \

#grep -h 'zip' grep*.txt
#echo "---"
#grep -h '.zip' grep*.txt	# '.' : 임의의 한글자
							# 반드시 한글자가 있어야 함
							# zip으로 시작 하면 검색 안됨.

#grep -h '\.zip' grep*.txt	# '\.' : 메타문자가 아닌 '.' 이라는 문자로 처리


# grep
# -h : 파일 이름 출력 안함
# -n : 파일 이름 + 줄번호

# 앵커 (^ 와 $)
#grep -h '^zip' grep*.txt 	# ^ : 제일 앞의 요소가 'zip' 라면 
#grep -h 'zip$' grep*.txt 	# $ : 제일 뒤의 요소가 'zip' 라면 
#grep -h '^zip$' grep*.txt	# 정확한 글자 매칭, 한줄이 'zip'
#grep -n '^$' 	grep*		# 빈 문자열 찾기

# 단어 찾기 게임[행맨] '....'
#grep -h '^.e.p.$' /usr/share/dict/words 	# words는 영어 단어가 있는 텍스트 파일


# [] 와 문자 클래스
#grep -h '[bg]zip' grep*		# [bg] : b 또는 g 
#grep -h '[^bg]zip' grep*		# [^bg] : b 또는 g 가 아닌 경우
#echo ">>>>"
#grep -h '^[bg]zip' grep*		# ^[bg] : 시작 문자열이 bzip 또는 gzip 인 경우


# 문장의 시작이 대문자로 되어 있는 문자열 찾기
#grep -h '^[A-Z]' grep*.txt
#grep -h '^[[:upper:]]' grep*.txt
# 문장의 시작이 소문자로 되어 있는 문자열 찾기
#grep -h '^[a-z]' grep*.txt
#grep -h '^[[:lower:]]' grep*.txt

#grep -h '^[[:upper:][:lower:]]' grep*.txt 	# 첫번째 글자가 영문자(대/소문자)

# 문장의 시작이 숫자로 되어 있는 문자열 찾기?
#grep -h '[100-100]' grep*.txt

### 여기까지가 기본 정규 표현식 (BRE) : . ^ $ [ ], 문자 클래스
#
### 아래부터는 확장 정규 표현식 (ERE) : | ( ) { }

#grep -h 'zip|ers' grep*.txt		# error 발생은 안하지만, grep 은 BRE 만 가능

#grep -h -E 'zip|ers' grep*.txt		# -E : ERE 사용
#egrep -h 'zip|ers' grep*.txt		# egrep 

# 앞단어가 bz, gz, zip 중에 하나로 시작하는 문자열을 찾아라 (egrep 사용)
#egrep -h '^bz|^gz|^zip' grep*.txt
#egrep -h '^(bz|gz|zip)' grep*.txt

# 메타 문자
## ? * + 

# 전화 번호 찾기
#egrep -h '[0-9]' phone.txt			#
#egrep -h '[0-9]-' phone.txt		# 
#egrep -h '[0-9]-?' phone.txt 		# ? : 앞에 문자가 하나 있거나 또는 없거나
#egrep -h '\-[0-9]' phone.txt		# -와 숫자 한개
#egrep -h '\-[0-9]$' phone.txt		# -와 숫자 한개, [끝]
#egrep -h '\-[0-9]?$' phone.txt		# -와 숫자 한개가 있거나 없거나 , [끝]
#egrep -h '\-[0-9]*$' phone.txt		# -, 숫자가 없거나 여러번 있거나, [끝]
#egrep -h '\-[0-9]+$' phone.txt		# -, 숫자가 한번 있거나 여러번 있거나, [끝]

# ? : 앞의 문자가 한번 있거나 없을때
# * : 앞의 문자가 여러번 있거나 없을때
# + : 앞의 문자가 한번 있거나 여러번 있을때


# 정규 표현식으로 전화 번호 찾기
## 0000-0000 유형 찾기
#egrep '^[0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]$' phone.txt	# 0000-0000 유형 찾기
#egrep '^[0-9][0-9][0-9][0-9]-?[0-9][0-9][0-9][0-9]$' phone.txt	# 00000000 유형 찾기
#egrep '^[0-9][0-9][0-9][0-9] [0-9][0-9][0-9][0-9]$' phone.txt	# 0000 0000 유형 찾기
#egrep '^[0-9][0-9][0-9][0-9] *[0-9][0-9][0-9][0-9]$' phone.txt	# 0000 0000 유형 찾기
#egrep '^[0-9][0-9][0-9][0-9](-?| *)[0-9][0-9][0-9][0-9]$' phone.txt	

# {} 를 사용한 반복 횟수 지정 258p
#egrep '^[0-9]{4}(-?| *)[0-9]{4}$' phone.txt	
egrep '^[0-9]{3,4}(-?| *)[0-9]{4}$' phone.txt	

















